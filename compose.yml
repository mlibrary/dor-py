services:
  app:
    depends_on:
      - db
      - pocketbase
    build: 
      context: .
      target: development
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        DEV: ${DEV:-false}
        POETRY_VERSION: ${POETRY_VERSION:-1.8.4}
    env_file:
      - .env
    volumes:
      - .:/app
    tty: true
    stdin_open: true
  api:
    depends_on:
      - db
      - pocketbase
    build: 
      context: .
      target: development
      dockerfile: Dockerfile
      args:
        UID: ${UID:-1000}
        GID: ${GID:-1000}
        DEV: ${DEV:-false}
        POETRY_VERSION: ${POETRY_VERSION:-1.8.4}
    env_file:
      - .env
    volumes:
      - .:/app
    tty: true
    stdin_open: true
    command: ["poetry", "run", "fastapi", "dev", "dor/entrypoints/api/main.py", "--host", "0.0.0.0", "--port", "8000"]
    ports:
      - ${API_PORT:-8000}:8000
  db:
    ports:
      - "5432:5432"
    image: postgres:17-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - PGDATA=/var/lib/postgresql/data/db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
  pocketbase:
    ports:
      - "8080:8080"
    image: pocketbase:0.25.8
    volumes:
      - ./data:/pb/data 
      - ./pb_user_setup.sh:/pb/pb_user_setup.sh
    command: /bin/sh -c "/pb/pocketbase serve --http=0.0.0.0:8080 & /bin/sh /pb/pb_user_setup.sh && tail -f /dev/null"
volumes:
  db-data:
